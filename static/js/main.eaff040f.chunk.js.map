{"version":3,"sources":["components/TodoForm.js","components/TodoItem.js","components/TodoList.js","store/actions/todos.actions.js","App.js","store/actionTypes.js","serviceWorker.js","store/reducers/index.js","store/reducers/todos.reducers.js","index.js","store/index.js"],"names":["TodoForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInput","event","setState","defineProperty","target","name","value","handleSubmit","_this$state","state","todo","tipo","dataEntrega","createTodo","Date","now","preventDefault","react_default","a","createElement","className","onSubmit","type","id","placeholder","onChange","defaultValue","Component","verificarStatus","status","TodoItem","_ref","deleteTodo","doUpdateTodo","finalizado","toLocaleDateString","checked","objectSpread","onClick","console","log","TodoList","toggleOrdenacao","desc","prevState","ordenarAtividades","atividades","ordenarPorTipo","ordenarPorPeriodo","ordenarPorStatus","ordenarPorNome","sort","item1","item2","toLowerCase","b","mostrarAtividades","map","components_TodoItem","key","_this2","todos","React","SERVER_URL","process","App","fetchAllTodos","_this$props","components_TodoForm","length","components_TodoList","connect","dispatch","axios","get","concat","then","res","data","catch","err","post","headers","Content-Type","_res$data","delete","_","removeTodo","_ref3","put","_res$data2","_ref2","Boolean","window","location","hostname","match","rootReducer","combineReducers","arguments","undefined","action","toConsumableArray","_action$todo","filter","item","index","findIndex","newState","splice","apply","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sRAoEeA,cAjEb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQRQ,YAAc,SAACC,GACbR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACGO,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,SAXnBb,EAenBc,aAAe,SAACN,GAAU,IAAAO,EACYf,EAAKgB,MAAjCC,EADgBF,EAChBE,KAAMC,EADUH,EACVG,KAAMC,EADIJ,EACJI,YACpBnB,EAAKD,MAAMqB,WAAWH,EAAMC,EAAMC,GAAeE,KAAKC,OACtDtB,EAAKS,SAAS,CAAEQ,KAAM,GAAIC,KAAM,UAAWC,YAAa,KACxDX,EAAMe,kBAjBNvB,EAAKgB,MAAQ,CACXC,KAAM,GACNC,KAAM,UACNC,YAAa,IALEnB,wEAuBjB,OACEwB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcC,SAAUzB,KAAKW,cAC3CU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHH,UAAU,eACVI,YAAY,oBACZC,SAAU7B,KAAKI,YACfM,MAAOV,KAAKa,MAAMC,QAGtBO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQd,KAAK,OAAOkB,GAAG,OAAOH,UAAU,eACtCK,SAAU7B,KAAKI,YAAaM,MAAOV,KAAKa,MAAME,MAE9CM,EAAAC,EAAAC,cAAA,UAAQO,cAAY,EAACpB,MAAM,WAA3B,WACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,gBAAd,kBAGJW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLjB,KAAK,cACLkB,GAAG,cACHH,UAAU,eACVK,SAAU7B,KAAKI,YACfM,MAAOV,KAAKa,MAAMG,eAGtBK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEG,KAAK,SACLF,UAAU,yBACVd,MAAM,uBA3DKqB,qBC4BjBC,EAAkB,SAACC,GACvB,GAAIA,EACF,MAAO,aAIIC,EAlCE,SAAAC,GAAwC,IAArCrB,EAAqCqB,EAArCrB,KAAMsB,EAA+BD,EAA/BC,WAAYC,EAAmBF,EAAnBE,aACpC,OACEhB,EAAAC,EAAAC,cAAA,MAAIC,UAAWQ,EAAgBlB,EAAKwB,aAClCjB,EAAAC,EAAAC,cAAA,UACGT,EAAKA,KACNO,EAAAC,EAAAC,cAAA,MAAIC,UAAWQ,EAAgBlB,EAAKwB,eAEtCjB,EAAAC,EAAAC,cAAA,UAAKT,EAAKC,MACVM,EAAAC,EAAAC,cAAA,UAAK,IAAIL,KAAKJ,EAAKE,aAAauB,sBAChClB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YACfH,EAAAC,EAAAC,cAAA,SAAOG,KAAK,WACVhB,MAAOI,EAAKwB,WACZE,QAAS1B,EAAKwB,WACdT,SAAU,kBAAMQ,EAAavC,OAAA2C,EAAA,EAAA3C,CAAA,GAAKgB,EAAN,CAAYwB,YAAcxB,EAAKwB,iBAC7DjB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAGpBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAckB,QAAS,kBAAMC,QAAQC,IAAI,aACtDvB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmBkB,QAAS,kBAAMN,EAAWtB,EAAKa,WC2H1DkB,cA9Ib,SAAAA,EAAYjD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,IACjBhD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+C,GAAA1C,KAAAH,KAAMJ,KAORkD,gBAAkB,SAAC/B,EAAMgC,GACnBhC,IAASlB,EAAKgB,MAAME,KACtBlB,EAAKS,SAAS,SAAA0C,GAAS,MAAK,CAAED,MAAOC,EAAUD,QAE/ClD,EAAKS,SAAS,CAAEyC,MAAM,EAAMhC,UAZblB,EAgBnBoD,kBAAoB,SAACC,EAAYnC,EAAMgC,GACrC,OAAQhC,GACN,IAAK,OACH,OAAOlB,EAAKsD,eAAeD,EAAYH,GACzC,IAAK,UACH,OAAOlD,EAAKuD,kBAAkBF,EAAYH,GAC5C,IAAK,SACH,OAAOlD,EAAKwD,iBAAiBH,EAAYH,GAC3C,QACE,OAAOlD,EAAKyD,eAAeJ,EAAYH,KAzB1BlD,EA6BnByD,eAAiB,SAACJ,EAAYH,GAgB5B,OAfDG,EAAWK,KAAK,SAASC,EAAOC,GAC7B,IAAMnC,EAAIkC,EAAM1C,KAAK4C,cACfC,EAAIF,EAAM3C,KAAK4C,cAErB,OAAIpC,EAAIqC,EACCZ,EAAO,GAAK,EAGjBY,EAAIrC,EACCyB,GAAQ,EAAI,EAGd,IAGFlD,EAAK+D,kBAAkBV,IA7CbrD,EAgDnBsD,eAAiB,SAACD,EAAYH,GAgB3B,OAfDG,EAAWK,KAAK,SAASC,EAAOC,GAC7B,IAAMnC,EAAIkC,EAAMzC,KAAK2C,cACfC,EAAIF,EAAM1C,KAAK2C,cAErB,OAAIpC,EAAIqC,EACCZ,EAAO,GAAK,EAGjBY,EAAIrC,EACCyB,GAAQ,EAAI,EAGd,IAGFlD,EAAK+D,kBAAkBV,IAhEdrD,EAmEnBuD,kBAAoB,SAACF,EAAYH,GAY/B,OAXAG,EAAWK,KAAK,SAASC,EAAOC,GAC9B,IAAMnC,EAAI,IAAIJ,KAAKsC,EAAMxC,aACnB2C,EAAI,IAAIzC,KAAKuC,EAAMzC,aAEzB,OAAI+B,EACKY,EAAIrC,EAEJA,EAAIqC,IAIR9D,EAAK+D,kBAAkBV,IA/EbrD,EAkFnBwD,iBAAmB,SAACH,EAAYH,GAY7B,OAXDG,EAAWK,KAAK,SAASC,EAAOC,GAC7B,IAAMnC,EAAIkC,EAAMlB,WACVqB,EAAIF,EAAMnB,WAEhB,OAAIS,EACKY,EAAIrC,EAEJA,EAAIqC,IAIR9D,EAAK+D,kBAAkBV,IA9FdrD,EAiGnB+D,kBAAoB,SAACV,GACnB,OAAOA,EAAWW,IAAI,SAAA/C,GAAI,OACxBO,EAAAC,EAAAC,cAACuC,EAAD,CAAUC,IAAKjD,EAAKa,GAAIb,KAAMA,EAC5BsB,WAAYvC,EAAKD,MAAMwC,WACvBC,aAAcxC,EAAKD,MAAMyC,kBAnG7BxC,EAAKgB,MAAQ,CACXE,KAAM,OACNgC,MAAM,GAJSlD,wEAyGV,IAAAmE,EAAAhE,KACCiE,EAAUjE,KAAKJ,MAAfqE,MADDrD,EAEgBZ,KAAKa,MAApBE,EAFDH,EAECG,KAAMgC,EAFPnC,EAEOmC,KACRG,EAAalD,KAAKiD,kBAAkBgB,EAAOlD,EAAMgC,GAEvD,OACE1B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAImB,QAAS,kBAAMsB,EAAKlB,gBAAgB,OAAQC,KAC9C1B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBADf,SAGAH,EAAAC,EAAAC,cAAA,MAAImB,QAAS,kBAAMsB,EAAKlB,gBAAgB,OAAQC,KAC9C1B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBADf,SAGAH,EAAAC,EAAAC,cAAA,MAAImB,QAAS,kBAAMsB,EAAKlB,gBAAgB,UAAWC,KACjD1B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBADf,eAGAH,EAAAC,EAAAC,cAAA,MAAImB,QAAS,kBAAMsB,EAAKlB,gBAAgB,SAAUC,KAChD1B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBADf,WAGAH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBADf,aAKJH,EAAAC,EAAAC,cAAA,aACG0C,EACCf,EACA7B,EAAAC,EAAAC,cAAA,qCAvIW2C,IAAMnC,4BCKvBoC,EAAcC,oEAAYD,YAAc,6CCKxCE,8LAEFrE,KAAKJ,MAAM0E,iDAGJ,IAAAC,EAMHvE,KAAKJ,MAJPqE,EAFKM,EAELN,MACAhD,EAHKsD,EAGLtD,WACAmB,EAJKmC,EAILnC,WACAC,EALKkC,EAKLlC,aAGF,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,yBAEFF,EAAAC,EAAAC,cAACiD,EAAD,CAAUvD,WAAYA,IACrBgD,EAAMQ,OACLpD,EAAAC,EAAAC,cAACmD,EAAD,CACET,MAAOA,EACP7B,WAAYA,EACZC,aAAcA,IAEhBhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,kDAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBA7BLO,aA2CH4C,cANS,SAAC9D,GACvB,MAAO,CACLoD,MAAOpD,EAAMoD,QAIuB,CACtCK,cDzC2B,kBAAM,SAACM,GAClC,OAAOC,IAAMC,IAAN,GAAAC,OAAaZ,EAAb,WACJa,KAAK,SAAAC,GAAG,OAAIL,EAPuB,CACtClD,KER4B,iBFS5BuC,MAKqCgB,EAAIC,SACtCC,MAAM,SAAAC,GAAG,OAAIzC,QAAQC,IAAIwC,OCsCbnE,WD9BS,SAACH,EAAMC,EAAMC,GAAb,OACxB,SAAC4D,GACD,OAAOC,IAAMQ,KAAN,GAAAN,OAAcZ,EAAd,WACL,CAAErD,OAAMC,OAAMC,eAAe,CAC3BsE,QAAS,CACPC,eAAgB,sBAGnBP,KAAK,SAAAC,GAAO,IAbM9C,EAaNqD,EACyCP,EAAIC,KAAhDvD,EADG6D,EACH7D,GAAIb,EADD0E,EACC1E,KAAMC,EADPyE,EACOzE,KAAMuB,EADbkD,EACalD,WAAYtB,EADzBwE,EACyBxE,YACpC4D,EAfmE,CACvElD,KEvBsB,WFwBtBZ,KAAM,CAAEa,IAFaQ,EAeA,CAAER,KAAIb,OAAMC,OAAMC,cAAasB,eAf5BX,GAEZb,KAFSqB,EAAOrB,KAEVC,KAFGoB,EAAapB,KAEVC,YAFHmB,EAAmBnB,YAEHsB,WAFhBH,EAAgCG,gBAiBlD6C,MAAM,SAAAC,GAAG,OAAIzC,QAAQC,IAAIwC,OCkBDhD,WDRH,SAACT,GAAD,OAAQ,SAACiD,GACjC,OAAOC,IAAMY,OAAN,GAAAV,OAAgBZ,EAAhB,WAAAY,OAAoCpD,IAC1CqD,KAAK,SAAAU,GAAC,OAAId,EATa,SAACjD,GACzB,MAAO,CACLD,KE3CuB,cF4CvBC,MAMkBgE,CAAWhE,MAC9BwD,MAAM,SAAAC,GAAG,OAAIzC,QAAQC,IAAIwC,OCKa/C,aDKb,SAAAuD,GAAA,IAAGjE,EAAHiE,EAAGjE,GAAIb,EAAP8E,EAAO9E,KAAMC,EAAb6E,EAAa7E,KAAMuB,EAAnBsD,EAAmBtD,WAAYtB,EAA/B4E,EAA+B5E,YAA/B,OAC1B,SAAC4D,GACC,OAAOC,IAAMgB,IAAN,GAAAd,OAAaZ,EAAb,WAAAY,OAAiCpD,GAAM,CAC5Cb,OAAMC,OAAMuB,aAAYtB,eAAe,CACrCsE,QAAS,CACPC,eAAgB,sBAGnBP,KAAK,SAAAC,GAAG,IAAAa,EAfWC,EAeX,OAAInB,GAAmBkB,EAA+Cb,EAAIC,KAAhDvD,EAAHmE,EAAGnE,GAAIb,EAAPgF,EAAOhF,KAAMC,EAAb+E,EAAa/E,KAAMuB,EAAnBwD,EAAmBxD,WAAYtB,EAA/B8E,EAA+B9E,YAd5D,CACLU,KEvDuB,cFwDvBZ,KAAM,CAAEa,IAHcoE,EAeYD,GAfTnE,GAGbb,KAH2DiF,EAA1CjF,KAGXC,KAHqDgF,EAApChF,KAGXuB,WAH+CyD,EAA9BzD,WAGLtB,YAHmC+E,EAAlB/E,kBAgBlDmE,MAAM,SAAAC,GAAG,OAAIzC,QAAQC,IAAIwC,QCfjBT,CAEZN,GE9CiB2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,sFCXSC,EAJKC,YAAgB,CAClCrC,MCGa,WAAsB,IAArBpD,EAAqB0F,UAAA9B,OAAA,QAAA+B,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIE,EAAWF,UAAA9B,OAAA,EAAA8B,UAAA,QAAAC,EACnC,OAAQC,EAAO/E,MACb,IHL0B,iBGMxB,OAAO5B,OAAA4G,EAAA,EAAA5G,CAAI2G,EAAOxC,OACpB,IHXoB,WGWpB,IAAA0C,EACsDF,EAAO3F,KAAnDa,EADVgF,EACUhF,GAAIb,EADd6F,EACc7F,KAAMC,EADpB4F,EACoB5F,KAAMC,EAD1B2F,EAC0B3F,YAAasB,EADvCqE,EACuCrE,WACrC,SAAAyC,OAAAjF,OAAA4G,EAAA,EAAA5G,CAAWe,GAAX,CAAkB,CAAEc,KAAIb,OAAMC,OAAMC,cAAasB,gBACnD,IHbuB,cGcrB,OAAOxC,OAAA4G,EAAA,EAAA5G,CAAIe,EAAM+F,OAAO,SAAAC,GAAI,OAAIA,EAAKlF,KAAO8E,EAAO9E,MACrD,IHduB,cGerB,IAAMmF,EAAQjG,EAAMkG,UAAU,SAAAF,GAAI,OAAIA,EAAKlF,KAAO8E,EAAO3F,KAAKa,KACxDqF,EAAWnG,EAIjB,OAHAmG,EAASC,OAATC,MAAAF,EAAQ,CAAQF,EAAO,GAAf/B,OAAAjF,OAAA4G,EAAA,EAAA5G,CACHe,EAAM+F,OAAO,SAAAC,GAAI,OAAIA,EAAKlF,KAAO8E,EAAO3F,KAAKa,KAC/CkC,IAAI,SAAAgD,GAAI,OAAQ/G,OAAA2C,EAAA,EAAA3C,CAAA,GAAS2G,EAAO3F,WAC5BhB,OAAA4G,EAAA,EAAA5G,CACFkH,GAEP,QACE,OAAOnG,MClBPsG,ECFUC,YAAYf,EACxBgB,YACEC,YAAgBC,KAChBtB,OAAOuB,8BACLvB,OAAOuB,iCDAfC,IAASC,OACPrG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAUR,MAAOA,GACf9F,EAAAC,EAAAC,cAACqG,EAAD,OAEFC,SAASC,eAAe,SHmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjD,KAAK,SAAAkD,GACjCA,EAAaC","file":"static/js/main.eaff040f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todo: '',\n      tipo: 'pessoal',\n      dataEntrega: '',\n    }\n  }\n\n  handleInput = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    const { todo, tipo, dataEntrega } = this.state;\n    this.props.createTodo(todo, tipo, dataEntrega || Date.now())\n    this.setState({ todo: '', tipo: 'pessoal', dataEntrega: '' })\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form className=\"form-inline\" onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            name=\"todo\"\n            id=\"todo\"\n            className=\"form-control\"\n            placeholder=\"Nome da Atividade\"\n            onChange={this.handleInput}\n            value={this.state.todo}\n          />\n        </div>\n        <div className=\"form-group\">\n          <select name=\"tipo\" id=\"tipo\" className=\"form-control\"\n            onChange={this.handleInput} value={this.state.tipo}\n            >\n            <option defaultValue value=\"pessoal\">Pessoal</option>\n            <option value=\"profissional\">Profissional</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"date\"\n            name=\"dataEntrega\"\n            id=\"dataEntrega\"\n            className=\"form-control\"\n            onChange={this.handleInput}\n            value={this.state.dataEntrega}\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            className=\"button button--primary\"\n            value=\"Adicionar\" />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default TodoForm;","import React from 'react';\n\nconst TodoItem = ({ todo, deleteTodo, doUpdateTodo }) => {\n  return (\n    <tr className={verificarStatus(todo.finalizado)}>\n      <td>\n        {todo.todo}\n        <hr className={verificarStatus(todo.finalizado)} />\n      </td>\n      <td>{todo.tipo}</td>\n      <td>{new Date(todo.dataEntrega).toLocaleDateString()}</td>\n      <td>\n        <label className=\"checkbox\">\n          <input type=\"checkbox\"\n            value={todo.finalizado}\n            checked={todo.finalizado}\n            onChange={() => doUpdateTodo({ ...todo, finalizado: ! todo.finalizado })} />\n          <span className=\"check\"></span>\n        </label>\n      </td>\n      <td>\n        <div className=\"icons\">\n          <i className=\"fas fa-edit\" onClick={() => console.log('asdfkh')}></i>\n          <i className=\"fas fa-trash-alt\" onClick={() => deleteTodo(todo.id)}></i>\n        </div>\n      </td>\n    </tr>\n  );\n}\n\nconst verificarStatus = (status) => {\n  if (status) {\n    return 'completed'\n  }\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tipo: 'nome',\n      desc: false\n    }\n  }\n\n  toggleOrdenacao = (tipo, desc) => {\n    if (tipo === this.state.tipo) {\n      this.setState(prevState => ({ desc: !prevState.desc }))\n    } else {\n      this.setState({ desc: true, tipo })\n    }\n  }\n\n  ordenarAtividades = (atividades, tipo, desc) => {\n    switch (tipo) {\n      case 'tipo':\n        return this.ordenarPorTipo(atividades, desc)\n      case 'periodo':\n        return this.ordenarPorPeriodo(atividades, desc)\n      case 'status':\n        return this.ordenarPorStatus(atividades, desc)\n      default:\n        return this.ordenarPorNome(atividades, desc)\n    }\n  }\n\n  ordenarPorNome = (atividades, desc) => {\n   atividades.sort(function(item1, item2) {\n      const a = item1.todo.toLowerCase();\n      const b = item2.todo.toLowerCase();\n\n      if (a > b) {\n        return desc ? 1 : -1;\n      }\n\n      if (b > a) {\n        return desc ? -1 : 1;\n      }\n\n      return 0\n    })\n\n    return this.mostrarAtividades(atividades);\n  }\n\n  ordenarPorTipo = (atividades, desc) => {\n    atividades.sort(function(item1, item2) {\n       const a = item1.tipo.toLowerCase();\n       const b = item2.tipo.toLowerCase();\n \n       if (a > b) {\n         return desc ? 1 : -1;\n       }\n \n       if (b > a) {\n         return desc ? -1 : 1;\n       }\n \n       return 0\n     })\n \n     return this.mostrarAtividades(atividades);\n   }\n\n  ordenarPorPeriodo = (atividades, desc) => {\n    atividades.sort(function(item1, item2) {\n      const a = new Date(item1.dataEntrega)\n      const b = new Date(item2.dataEntrega)\n\n      if (desc) {\n        return b - a;\n      } else {\n        return a - b;\n      }\n    })\n\n    return this.mostrarAtividades(atividades);\n  }\n\n  ordenarPorStatus = (atividades, desc) => {\n    atividades.sort(function(item1, item2) {\n       const a = item1.finalizado\n       const b = item2.finalizado\n \n       if (desc) {\n         return b - a;\n       } else {\n         return a - b;\n       }\n     })\n \n     return this.mostrarAtividades(atividades);\n   }\n\n  mostrarAtividades = (atividades) => {\n    return atividades.map(todo =>\n      <TodoItem key={todo.id} todo={todo}\n        deleteTodo={this.props.deleteTodo}\n        doUpdateTodo={this.props.doUpdateTodo}\n    />)\n  }\n\n  render() {\n    const { todos } = this.props;\n    const { tipo, desc } = this.state;\n    const atividades = this.ordenarAtividades(todos, tipo, desc);\n        \n    return (\n      <table>\n        <thead>\n          <tr>\n            <th onClick={() => this.toggleOrdenacao('nome', desc)}>\n              <i className=\"fas fa-angle-down\"></i> Nome\n            </th>\n            <th onClick={() => this.toggleOrdenacao('tipo', desc)}>\n              <i className=\"fas fa-angle-down\"></i> Tipo\n            </th>\n            <th onClick={() => this.toggleOrdenacao('periodo', desc)}>\n              <i className=\"fas fa-angle-down\"></i> Período\n            </th>\n            <th onClick={() => this.toggleOrdenacao('status', desc)}>\n              <i className=\"fas fa-angle-down\"></i> Status\n            </th>\n            <th>\n              <i className=\"fas fa-angle-down\"></i> Editar\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos ?\n            atividades :\n            <div>Carregando...</div>\n          }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default TodoList;","import {\n  SHOW_ALL_TODOS,\n  ADD_TODO,\n  REMOVE_TODO,\n  UPDATE_TODO,\n} from '../actionTypes';\nimport axios from 'axios';\n\nconst SERVER_URL = (process.env.SERVER_URL || 'https://msena-gerdau-python.herokuapp.com/')\n  || 'http://localhost:5000';\n\nexport const loadAllTodos = (todos) => ({\n  type: SHOW_ALL_TODOS,\n  todos\n})\n\nexport const fetchAllTodos = () => (dispatch) => {\n  return axios.get(`${SERVER_URL}/todos`)\n    .then(res => dispatch(loadAllTodos(res.data)))\n    .catch(err => console.log(err))\n}\n\nexport const addTodo = ({ id, todo, tipo, dataEntrega, finalizado }) => ({\n  type: ADD_TODO,\n  todo: { id, todo, tipo, dataEntrega, finalizado }\n})\n\nexport const createTodo = (todo, tipo, dataEntrega) =>\n  (dispatch) => {\n  return axios.post(`${SERVER_URL}/todos/`,\n    { todo, tipo, dataEntrega }, {\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n    .then(res => {\n      const { id, todo, tipo, finalizado, dataEntrega } = res.data\n      dispatch(addTodo({ id, todo, tipo, dataEntrega, finalizado }))\n    })\n    .catch(err => console.log(err))\n}\n\nexport const removeTodo = (id) => {\n  return {\n    type: REMOVE_TODO,\n    id\n  }\n}\n\nexport const deleteTodo = (id) => (dispatch) => {\n  return axios.delete(`${SERVER_URL}/todos/${id}`)\n  .then(_ => dispatch(removeTodo(id)))\n  .catch(err => console.log(err))\n}\n\nexport const updateTodo = ({ id, todo, tipo, finalizado, dataEntrega }) => {\n  return {\n    type: UPDATE_TODO,\n    todo: { id, todo, tipo, finalizado, dataEntrega }\n  }\n}\n\nexport const doUpdateTodo = ({ id, todo, tipo, finalizado, dataEntrega }) =>\n  (dispatch) => {\n    return axios.put(`${SERVER_URL}/todos/${id}`, {\n      todo, tipo, finalizado, dataEntrega }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(res => dispatch(updateTodo({ id, todo, tipo, finalizado, dataEntrega } = res.data)))\n      .catch(err => console.log(err))\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './sass/App.scss';\n\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport {\n  fetchAllTodos,\n  createTodo,\n  deleteTodo,\n  doUpdateTodo\n} from './store/actions/todos.actions';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchAllTodos();\n  }\n\n  render() {\n    const {\n      todos,\n      createTodo,\n      deleteTodo,\n      doUpdateTodo\n    } = this.props;\n    \n    return (\n      <div className=\"App\">\n        <header>\n          <h1>To Do List</h1>\n        </header>\n        <TodoForm createTodo={createTodo} />\n        {todos.length ?\n          <TodoList\n            todos={todos}\n            deleteTodo={deleteTodo}\n            doUpdateTodo={doUpdateTodo}\n          /> :\n          <div className=\"App--sem-atividades\">\n            <p>Não há atividades registradas.</p>\n          </div>\n        }\n        <div className=\"popup\">\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: state.todos\n  }\n}\n\nexport default connect(mapStateToProps, {\n  fetchAllTodos, createTodo, deleteTodo, doUpdateTodo\n})(App);\n","export const ADD_TODO = 'ADD_TODO';\nexport const REMOVE_TODO = 'REMOVE_TODO';\nexport const UPDATE_TODO = 'UPDATE_TODO';\nexport const SHOW_TODO = 'SHOW_TODO';\nexport const SHOW_ALL_TODOS = 'SHOW_ALL_TODOS';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport todos from './todos.reducers';\n\nconst rootReducer = combineReducers({\n  todos\n})\n\nexport default rootReducer;\n","import {\n  ADD_TODO,\n  SHOW_ALL_TODOS,\n  REMOVE_TODO,\n  UPDATE_TODO\n} from '../actionTypes';\n\nexport default (state=[], action) => {\n  switch (action.type) {\n    case SHOW_ALL_TODOS:\n      return [...action.todos]\n    case ADD_TODO:\n      const { id, todo, tipo, dataEntrega, finalizado } = action.todo\n      return [...state, { id, todo, tipo, dataEntrega, finalizado }]\n    case REMOVE_TODO:\n      return [...state.filter(item => item.id !== action.id)]\n    case UPDATE_TODO:\n      const index = state.findIndex(item => item.id === action.todo.id)\n      const newState = state\n      newState.splice(index, 1,\n        ...state.filter(item => item.id === action.todo.id)\n        .map(item => item = ({ ...action.todo })))\n      return [\n        ...newState\n      ]\n    default:\n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureStore } from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nexport const configureStore = () => {\n  const store = createStore(rootReducer,\n    compose(\n      applyMiddleware(thunk),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  )\n\n  return store\n}"],"sourceRoot":""}